name: Automate Release

on:
  push:
    branches:
      - main
      - release/*

jobs:
  version_publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      packages: write

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.SAE_TOKEN }}

      # Step 2: Set up Node.js
      - name: Cache Bun dependencies
        uses: actions/cache@v3
        id: bun-cache
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      # Step 3: Set up Bun
      - name: Install dependencies
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      # Step 4: Install semantic-release and plugins
      - name: Install semantic-release and plugins
        run: bun add -D semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/npm
        if: steps.bun-cache.outputs.cache-hit != 'true'
        
      # Step 5: Authenticate with GitHub Packages
      - name: Authenticate with GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.SAE_TOKEN }}" > ~/.npmrc
          echo "@lordcrainer:registry=https://npm.pkg.github.com" >> ~/.npmrc 

      # Step 6: Run semantic-release
      - name: Semantic Release
        run: bunx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.SAE_TOKEN }} 
          NODE_AUTH_TOKEN: ${{ secrets.SAE_TOKEN }}

