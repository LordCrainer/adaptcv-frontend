#!/bin/bash
# 1. Verificar cambios remotos
git fetch origin

if ! git diff --quiet HEAD @{u}; then
  echo "üî¥ Cambios remotos detectados:"
  git --no-pager log --oneline HEAD..origin/main
  
  # 2. Stash de cambios locales (incluyendo unstaged)
  git stash push --include-untracked --message "Auto-stash pre-pull"
  
  # 3. Intentar pull con rebase (m√°s seguro que merge)
  if ! git pull; then
    echo "‚ùå Conflicto detectado al hacer pull --rebase:"
    echo "   - Resuelve los conflictos manualmente"
    echo "   - Luego ejecuta: git rebase --continue"
    echo "   - Finalmente recupera cambios con: git stash pop"
    exit 1
  fi
  
  # 4. Reaplicar cambios locales solo si el stash existe
  if git stash list | grep -q "Auto-stash pre-pull"; then
    if ! git stash pop; then
      echo "‚ö†Ô∏è  Conflicto al reaplicar tus cambios locales:"
      echo "   - Resuelve los conflictos manualmente en los archivos mencionados"
      echo "   - Luego marca como resueltos con: git add [archivos]"
      exit 1
    fi
  fi
  
  # 5. Informar √©xito
  echo "‚úÖ Sincronizaci√≥n completada. Ahora puedes hacer commit:"
  git status --short
  exit 0  # Sale del hook para que vuelvas a intentar el commit
fi